# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
#Blog
GET    /test	                                   controllers.SampleDataController.test()

GET    /blog/create-blog-admin                     controllers.SampleDataController.createBlogAdmin()
GET    /blog/login                                 controllers.LoginController.blogAdminLoginForm()

GET		/blog										controllers.BlogController.blogHome()
GET		/blog/admin/new-category					controllers.BlogController.categoryForm()
POST	/blog/admin/new-category					controllers.BlogController.processCategoryForm()
GET		/blog/admin/categories						controllers.BlogController.categories()
GET		/blog/admin/edit-category/:id				controllers.BlogController.editCategoryForm(id: Long)
GET		/blog/admin/new-article						controllers.BlogController.articleForm()
POST	/blog/admin/new-article						controllers.BlogController.processArticleForm()
GET		/blog/admin/articles/:categoryId			controllers.BlogController.articles(categoryId: Long)
GET		/blog/admin/edit-article/:id				controllers.BlogController.editArticleForm(id: Long)
GET		/blog/get-thumbnail/:id						controllers.BlogController.getThumbnail(id: Long)
GET		/blog/get-main-image/:id					controllers.BlogController.getMainImage(id: Long)

GET    /blog/add-comment/:id/:message              	controllers.BlogController.addComment(id: Long, message: String)
GET    /blog/add-comment-reply/:id/:cid/:message   	controllers.BlogController.addCommentReply(id: Long, cid: Long, message: String)

POST   /blog/add-social-comment                    	controllers.BlogController.addSocialComment()
POST   /blog/add-social-comment-reply              	controllers.BlogController.addSocialCommentReply()

GET		/blog/:id/:slug								controllers.BlogController.showArticle(id: Long, slug: String)
GET		/blog/:idorslug								controllers.BlogController.showArticleWithIdOrSlug(idorslug: String)
GET		/sitemap.xml								controllers.Application.sitemap()



# Home page & Logins
GET    /                                 			controllers.Application.index()
POST   /login                             			controllers.LoginController.processLogin()
GET    /logout                            			controllers.LoginController.processLogout()


# Sign up page
GET    /join                                       controllers.UserController.joinUs()
POST   /join                                       controllers.UserController.processJoinUs()


# Doctor's Profile
GET		/dashboard                                  controllers.UserActions.dashboard()
POST	/doctor/doctor-basic-update					controllers.DoctorController.basicUpdate()
POST	/doctor/doctor-images-update				controllers.DoctorController.imagesUpdate()
GET    	/doctor/get-image/:id/:type                 controllers.DoctorController.getImage(id: Long, type :String)
POST	/doctor/add-work-experience					controllers.DoctorController.addWorkExperience()
GET		/doctor/remove-work-experience/:docId/:id	controllers.DoctorController.removeWorkExperience(docId: Long, id: Long)
POST	/doctor/add-award							controllers.DoctorController.addAward()
GET		/doctor/remove-award/:docId/:id				controllers.DoctorController.removeAward(docId: Long, id: Long)
POST	/doctor/add-education						controllers.DoctorController.addEducation()
GET		/doctor/remove-education/:docId/:id			controllers.DoctorController.removeEducation(docId: Long, id: Long)
POST	/doctor/add-social-work						controllers.DoctorController.addSocialWork()
GET		/doctor/remove-social-work/:docId/:id		controllers.DoctorController.removeSocialWork(docId: Long, id: Long)

# Doctor's Clinics
GET	   /doctor/new-clinic  							controllers.DoctorController.newClinic()
POST   /doctor/new-clinic                          controllers.DoctorController.processNewClinic()
GET    /doctor/clinics                             controllers.DoctorController.myClinics()
GET    /doctor/edit-clinic/:id	                   controllers.DoctorController.manageClinic(id:Long)
POST   /doctor/update-clinic						controllers.DoctorController.processUpdateClinicInfo()
POST   /doctor/update-clinic-schedule				controllers.DoctorController.processUpdateClinicSchedule()
GET		/doctor/delete-clinic/:id					controllers.DoctorController.deleteClinic(id:Long)

# Remove later (at Beta Launch)
#GET    /                                  controllers.Application.index()
#GET    /:str		                      controllers.Application.indexX(str: String)


#############################	PRODUCTION	#################################################################################


GET    /doctor/prescription						controllers.DoctorController.doctorPrescription()

GET 	/viewappointments							controllers.DoctorController.doctorViewAppointment()
GET    /doctor/today-appointment                   controllers.DoctorController.viewTodaysAppointment()	
GET	   /doctor/appointments						   controllers.DoctorController.doctorAppointments()
GET		/doctor/search/appointment					controllers.DoctorController.doctorSearchAppointment()

GET    /userform/assistant/               		controllers.AssistantController.form()
POST   /userform/assistant/               		controllers.AssistantController.process()
GET    /scheduleappointment/              		controllers.AppointmentController.form()
POST   /scheduleappointment/              		controllers.AppointmentController.process()			


#Pharmacy Module

GET   /edit-product/:id                      				controllers.PharmacistController.editProduct(id: Long)
GET   /remove-product/:id                      				controllers.PharmacistController.removeProduct(id: Long)
POST	/addProductToInventory/								controllers.PharmacistController.addProductForm(id: Long)
POST   /addProductToInventory1/            					controllers.PharmacistController.addToInventory(id:Long)		
GET		/order												controllers.PharmacistController.orderRecord()
GET    /searchProduct                           			controllers.PharmacistController.searchForm()
POST   /searchProduct                           			controllers.PharmacistController.searchProduct(arg: String ?= "")
GET   /place-product-order                     				controllers.PharmacistController.placeProductOrder()
GET   /place-product-order/process              			controllers.PharmacistController.placeProductOrderProcess()
#GET	 /pharmacy/profile									controllers.PharmacistController.pharmacyProfile()
GET		/edit-pharmacy-details								controllers.PharmacistController.editPharmacyDetails()
POST	/pharmacy/basic-update								controllers.PharmacistController.pharmacyBasicUpdate()
POST	/pharmacy/address-update							controllers.PharmacistController.pharmacyAddressUpdate()
#GET	/pharmacy/search-product							controllers.PharmacistController.productSearchProcess()	
POST	/pharmacy/add-product-to-showcase					controllers.PharmacistController.addShowCasedProduct()
GET		/pharmacy/remove-product-from-showcase/:id			controllers.PharmacistController.removeProductFromShowcaseList(id: Long)
POST	/pharmacy/upload-pharmacy-images					controllers.PharmacistController.uploadPharmacyImageProcess()
GET		/pharmacy/get-image/:pharmacyId/:fileId				controllers.PharmacistController.getPharmacyImages(pharmacyId: Long,fileId: Long)
GET		/pharmacy/remove-image/:pharmacyId/:fileId			controllers.PharmacistController.removeImage(pharmacyId: Long,fileId: Long)
GET		/pharmacy/order/:id									controllers.PharmacistController.pharmacyPlaceOrder(id: Long)

GET 	/pharmacy/order									controllers.PharmacistController.orderManagement()

#GET 	/create-Mr-schedule				controllers.DoctorController.createMrSchedule()
#POST	/create-Mr-appointment 			controllers.DoctorController.createMrAppointment()


#GET 	/create-Mr-schedule						controllers.DoctorController.createMrSchedule()
#POST	/create-Mr-appointment 					controllers.DoctorController.createMrAppointment()



#GET    /medical-representative                     controllers.Application.medicalRepresentative()
#POST   /medical-representative/proccess            controllers.Application.medicalRepresentativeProccess()
GET    /diagRep/                                   controllers.Application.diagnosticRep()
POST   /diagRepProccess/                           controllers.Application.diagnosticRepProccess()
GET    /sampledata/populate                        controllers.SampleDataController.populate()
GET    /sampledata/cleanup                         controllers.SampleDataController.cleanUp()
GET    /sampledata/temp                            controllers.SampleDataController.temp()

#POST   /userform/patientproccess/       		controllers.PatientController.process()

GET    /home/                             		controllers.Application.homePage()
GET    /questionform                      		controllers.PatientController.displayQuestion()
POST   /askQuestion                       		controllers.PatientController.askQuestion()

GET    /patient/diagnostics               		controllers.PatientController.diagnosticList()
GET    /add-diagnostic-center/:id               controllers.PatientController.saveDiagnosticCenter(id: Long)
GET    /patient/my-diag-centers               	controllers.PatientController.myDiagnosticCenters()
GET    /patient/remove-diag-centers/:id         controllers.PatientController.removePatientDiagnoCenter(id: Long)
GET    /static/patient/favdoctors						controllers.PatientController.staticPatientMyFavDoctors()
GET		/static/patient/new/appointment				controllers.PatientController.staticPatientNewAppointment()

GET    /answerform                       		 controllers.DoctorController.displayAnswer()
POST   /ansQuestion/:qaId                 		 controllers.DoctorController.answerQuestion(qaId: Long)


#GET    /diagnosticlist                   	 	controllers.DiagnosticController.diagnosticlist()
#GET    /diagnostic-service-list/:id            controllers.DiagnosticController.diagnosticServiceslist(id: Long)
GET    /diagnostic-delete/:id             		controllers.DiagnosticController.deleteCenter(id: Long)
GET    /diagnostic-edit/:id						controllers.DiagnosticController.editDiagnosticDetails(id: Long)
POST    /diagnostic-edit 						controllers.DiagnosticController.diagnosticEditprocess()
GET    /diagnostic-search      					controllers.DiagnosticController.diagnosticSearch()
GET    /diagnostic-search/list 					controllers.DiagnosticController.diagnosticSearchProcess()
#GET    /diagnosticrep/doctor-list         		controllers.DRController.doctorList()
GET    /diagnosticrep			         		controllers.DRController.addDiagRep()
POST    /diagnosticrep/save		         		controllers.DRController.addDiagRepProcess()
GET    /diagnosticrep/list			        	controllers.DRController.diagnosticRepresentativeList()
GET    /diagnosticrep/doctor-search	         	controllers.DRController.search()
GET    /diagnosticrep/doctorsearch	         	controllers.DRController.searchProcess()
GET    /diagnosticrep/add-doctor/:id      		controllers.DRController.addDoctor(id: Long)
GET    /diagnosticrep/remove-doctor/:id   		controllers.DRController.removeDoctor(id: Long)
GET    /diagnostic-centre/all-doctors      		controllers.DRController.displayDiagnosticCentreDoctors()

#Diagnostic Test
GET    /test				            						controllers.DiagnosticController.addTest()
POST   /test/save					       						controllers.DiagnosticController.addTestProcess()
GET    /test-list/:diagnosticCentreId/:patientId   				controllers.DiagnosticController.diagnosticTestList(diagnosticCentreId: Long,patientId: Long)
GET    /diagnostic-test-list				    				controllers.DiagnosticController.diagnosticCentreTestList()	
GET    /upload-patient-file/:id									controllers.DiagnosticController.uploadFile(id: Long)
POST   /upload-patient-file/save		  						controllers.DiagnosticController.uploadFileProcess()
GET    /download						  						controllers.DiagnosticController.downloadFile()
#GET   /add-test-done						  					controllers.DiagnosticController.addTestDone()
#GET    /test-list/:id				            				controllers.DiagnosticController.diagnosticCentreTestList(id: Long)
POST	/diagnostic/upload-diagnostic-images					controllers.DiagnosticController.uploadDiagnosticImageProcess()
GET		/diagnostic/get-image/:diagnosticId/:fileId				controllers.DiagnosticController.getDiagnosticImages(diagnosticId: Long,fileId: Long)
POST	/diagnostic/basic-update								controllers.DiagnosticController.diagnosticBasicUpdate()
POST	/diagnostic/address-update								controllers.DiagnosticController.diagnosticAddressUpdate()
GET		/diagnostic/remove-image/:diagnosticId/:fileId			controllers.DiagnosticController.removeDiagnosticImage(diagnosticId: Long,fileId: Long)
																																



POST	/place-order							controllers.DiagnosticOrderController.receive()		
GET		/display-orders							controllers.DiagnosticOrderController.viewOrders()	
GET		/remove-order/:id						controllers.DiagnosticOrderController.removeOrder(id: Long)	
GET		/received-tests/:id						controllers.DiagnosticOrderController.viewReceivedTest(id: Long)
GET		/sample-collected/:id					controllers.DiagnosticOrderController.sampleCollect(id: Long)
GET		/report-generated						controllers.DiagnosticOrderController.reoprtReady(id: Long)
GET    /patient-search      					controllers.DiagnosticOrderController.patientSearch()
GET    /patient-search/list 					controllers.DiagnosticOrderController.patientSearchProcess()
																										
#MR Module

GET		/mr/hierarchy							   controllers.MRController.viewHierarchy()

GET    /doctor-list                                controllers.MRController.doctorList()
GET    /mr/add-doctor/:id                          controllers.MRController.addDoctor(id: Long)
GET    /mr/remove-doctor/:id                       controllers.MRController.removeDoctor(id: Long)
GET    /mr/doctor-list                             controllers.MRController.mrDoctorList()
GET    /mr/add-mr                                  controllers.MRController.addMR()
GET    /mr/list-mr                                 controllers.MRController.mrList()
GET    /mr/hq                                      controllers.MRController.headQuarter()
GET    /mr/dcr-list                                controllers.MRController.listDCR()
POST   /mr/new-dcr                                 controllers.MRController.processNewDCR()
GET    /mr/show-dcr/:id                            controllers.MRController.addDCRLineItem(id: Long)
POST   /mr/dcr/add-line-item                       controllers.MRController.processDCRLineItem()
POST   /mr/dcr/delete-line-item/:dcrid/:lineitemid      controllers.MRController.removeDCRLineItem(dcrid: Long,lineitemid: Long)
GET    /search                                          controllers.MRController.search()
GET    /mr/display-appointment/:id                      controllers.MRController.scheduleAppointment(id:String)
POST	/mr/add-head-quarter							controllers.MRController.addHeadQuarter()
POST    /mr/add                                    controllers.MRController.medicalRepresentativeProccess()
#POST    /mr/editmr                                 controllers.MRController.medicalRepresentativeProccessUpdate()
GET     /mr/del	                                   controllers.MRController.removeMR(id: Long)
GET     /mr/edit/:id	                           controllers.MRController.editMR(id: Long)



#common module
GET    /new-product                                     controllers.ProductController.productForm()
POST   /new-product                                     controllers.ProductController.saveProduct()
GET		/mr/new-product									controllers.ProductController.pharmaceuticalProductForm()
POST	/mr/new-product									controllers.ProductController.savePharmceuticalProduct()
GET    /view-products                                   controllers.ProductController.displayProduct()
#GET    /edit-product/:id                           controllers.ProductController.editProduct(id: Long)

# delete later
GET    /userform/patient/                 controllers.PatientController.form()
GET    /userform/patient/h/               controllers.PatientController.enterForm()
GET    /register/                         controllers.PatientController.register()
POST   /register/                         controllers.PatientController.registerProccess()


#sample data
#GET   /sampledata/day					controllers.SampleDataController.days()
GET	/mr/sample-data					controllers.SampleDataController.mrSampleData()
# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file                                    controllers.Assets.at(path="/public", file)



