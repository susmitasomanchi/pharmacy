# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET		/								controllers.Application.index()
POST	/login							controllers.LoginController.processLogin()
GET		/logout							controllers.LoginController.processLogout()

# Sign up page
GET		/join							controllers.UserController.joinUs()
POST	/join							controllers.UserController.processJoinUs()

# patient actions
GET		/user/schedule-appointment		controllers.PatientController.scheduleAppointment()
POST	/doctor/request-appointment		controllers.DoctorController.requestAppointment()


# doctor actions
GET		/doctor/new-assistant			controllers.DoctorController.newAssistant()
GET		/doctor/new-clinic				controllers.DoctorController.newClinic()
POST	/doctor/new-clinic				controllers.DoctorController.processNewClinic()
GET		/doctor/clinics					controllers.DoctorController.myClinics()





GET    /userform/farmaciest/            controllers.PharmacistController.form()
POST   /userform/farmaciest-proccesss   controllers.PharmacistController.process()
GET    /userform/doctor/                controllers.DoctorController.form()
POST   /userform/doctor/                controllers.DoctorController.process()
GET		/userform/assistant/			controllers.AssistantController.form()
POST	/userform/assistant/			controllers.AssistantController.process()
GET		/scheduleappointment/			controllers.AppointmentController.form()
POST	/scheduleappointment/			controllers.AppointmentController.process()
GET    /userform/pharmacy/                controllers.PharmacyController.form() 
POST   /userform/pharmacy/                controllers.PharmacyController.process()
GET		/newProduct						controllers.PharmacistController.productForm()
POST	/newProduct						controllers.PharmacistController.saveProduct()					
GET		/products						controllers.PharmacistController.displayProducts()

GET    /salesRep/                       controllers.Application.salesRepresentator()
POST   /salesRepProccess/               controllers.Application.salesRepresentatorProccess()
GET    /diagRep/                        controllers.Application.diagnosticRep()
POST   /diagRepProccess/                controllers.Application.diagnosticRepProccess()
GET    /sampledata/populate             controllers.SampleDataController.populate()
GET    /sampledata/cleanup              controllers.SampleDataController.cleanUp()
GET    /sampledata/temp                 controllers.SampleDataController.temp()

#POST   /userform/patientproccess/       controllers.PatientController.process()

GET    /home/                           controllers.Application.homePage()
GET    /questionform                    controllers.PatientController.displayQuestion()
POST   /askQuestion                     controllers.PatientController.askQuestion()

GET    /answerform                      controllers.DoctorController.displayAnswer()
POST   /ansQuestion/:qaId               controllers.DoctorController.answerQuestion(qaId: Long)
# doctor action
GET    /doc-stuff/                      controllers.DoctorController.docStuff()
GET    /dashboard						controllers.UserActions.dashboard()
GET    /register-patient/               controllers.DoctorController.registerPatient()
POST   /register-patient-proccess/      controllers.DoctorController.registerPatientProccess()

#Diagnostic module
GET    /diagnosticregistration          controllers.DiagnosticController.diagnosticCenter()
POST   /diagnosticregistration/save     controllers.DiagnosticController.diagnosticCenterProcess()
GET    /diagnosticlist                  controllers.DiagnosticController.Diagnosticlist()
GET    /diagnostic-delete/:id           controllers.DiagnosticController.deleteCenter(id: Long)


# delete later
GET    /userform/patient/               controllers.PatientController.form()
GET    /userform/patient/h/             controllers.PatientController.enterForm()
GET    /register/                       controllers.PatientController.register()
POST   /register/                       controllers.PatientController.registerProccess()



# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file                    controllers.Assets.at(path="/public", file)
