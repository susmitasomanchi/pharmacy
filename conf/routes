# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


#Blog
GET		/blog										controllers.BlogController.blogHome()
GET		/blog-admin/new-category					controllers.BlogController.categoryForm()
POST	/blog-admin/new-category					controllers.BlogController.processCategoryForm()
GET		/blog-admin/categories						controllers.BlogController.categories()
GET		/blog-admin/edit-category/:id				controllers.BlogController.editCategoryForm(id: Long)
GET		/blog-admin/new-article						controllers.BlogController.articleForm()
POST	/blog-admin/new-article						controllers.BlogController.processArticleForm()
GET		/blog-admin/articles/:categoryId			controllers.BlogController.articles(categoryId: Long)
GET		/blog-admin/edit-article/:id				controllers.BlogController.editArticleForm(id: Long)
GET		/blog/get-thumbnail/:id						controllers.BlogController.getThumbnail(id: Long)
GET		/blog/get-main-image/:id					controllers.BlogController.getMainImage(id: Long)

GET    /blog/add-comment/:id/:message              	controllers.BlogController.addComment(id: Long, message: String)
GET    /blog/add-comment-reply/:id/:cid/:message   	controllers.BlogController.addCommentReply(id: Long, cid: Long, message: String)

POST   /blog/add-social-comment                    	controllers.BlogController.addSocialComment()
POST   /blog/add-social-comment-reply              	controllers.BlogController.addSocialCommentReply()

GET		/blog/:id/:slug								controllers.BlogController.showArticle(id: Long, slug: String)
GET		/blog/:idorslug								controllers.BlogController.showArticleWithIdOrSlug(idorslug: String)
GET		/sitemap.xml								controllers.Application.sitemap()



# Home page & Logins
GET    /                                 			controllers.Application.index()
POST   /secure-login                             			controllers.LoginController.processLogin()
GET    /secure-logout                            			controllers.LoginController.processLogout()

GET    /secure-forgot-password                            	controllers.LoginController.forgotPassword()
POST   /secure-forgot-password                            	controllers.LoginController.processForgotPassword()
GET		/secure-forgot-reset-password/:userId/:forgotPasswordKey	controllers.LoginController.editForgotPassword(userId: Long, forgotPasswordKey:String)
POST	/secure-forgot-reset-password						controllers.LoginController.updateForgotPassword()

GET    /secure-edit-password                            	controllers.LoginController.editPassword()
POST   /secure-update-password                            	controllers.LoginController.updatePassword()

GET	   /secure-edit-my-profile								controllers.UserController.editAppUserProfile()
POST   /secure-edit-my-profile								controllers.UserController.updateAppUserProfile()

GET		/secure-weight-details							controllers.TrackerController.appUserWeightTracker()
POST   /secure-weight-details							controllers.TrackerController.processWeightTracker()
GET		/secure-remove-weight-details/:id							controllers.TrackerController.removeAppUserWeightDetails(id: Long)
GET		/secure-bp-details							controllers.TrackerController.appUserBpTracker()
POST   /secure-bp-details							controllers.TrackerController.processBpTracker()
GET		/secure-remove-bp-details/:id							controllers.TrackerController.removeAppUserBpDetails(id: Long)
GET 	/secure-sugar-tracker									controllers.TrackerController.sugarTracker()
POST    /secure-sugar-tracker-process														controllers.TrackerController.processSugarTracker()
GET		/secure-remove-sugar-details/:id							controllers.TrackerController.removeAppUserSugarDetails(id: Long)

GET		/secure-not-confirmed-yet							controllers.UserController.confirmAppUserPage()
GET		/secure-user/verify-email							controllers.UserController.sendConformationEmail()
GET 	/secure-user/confirmation/:userId/:randomString	controllers.PublicController.emailConfirmation(userId: Long, randomString:String)
GET		/secure-user/send-verificaion-code					controllers.UserController.sendMobVerificationCode()
GET 	/secure-user/verify-mobile-number					controllers.UserController.displayMobVerificationForm()
POST 	/secure-user/verify-mobile-number					controllers.UserController.verifyMobileNumberConfirmationKey()


# Public Pages

GET		/doctor/search									controllers.PublicController.searchDoctorsPage()
GET		/doctor/search/:spez/:loc/:key								controllers.PublicController.processSearchDoctors(spez: String,loc :String, key: String)
GET		/pharmacy/search/:searchString/:loc                  controllers.PublicController.processSearchPharmacies(searchString: String,loc : String)
#GET   	/pharmacy/add-favourite-pharmacy/:pharmacyId/:str   controllers.PublicController.myFavoritePharmacy(pharmacyId : Long,str: String)
GET		/pharmacy/search									controllers.PublicController.searchPharmaciesPage()
GET   	/diagnostic/search/:searchString/:loc                  				controllers.PublicController.processSearchDiagnosticCentres(searchString: String,loc : String)
GET    /diagnostic/search												controllers.PublicController.searchDiagnosticPage()
GET   	/clinic/search/:searchString/:loc                  				controllers.PublicController.searchFavoriteClinics(searchString: String,loc : String)
GET    /clinic/search												controllers.PublicController.searchClinics()
GET		/doctor/get-localities/:cityId									controllers.PublicController.getPrimaryCityLocations(cityId : String)
GET		/doctor/get-names-json/:loc/:spez										controllers.PublicController.getAllDoctorsInCity(loc : String,spez : String)
GET		/pharmacy/get-names-json/:loc											controllers.PublicController.getAllPharmaciesInCity(loc : String)
GET		/diagnostic/get-names-json/:loc											controllers.PublicController.getAllDiagnosticsInCity(loc : String)




GET    /feedback											controllers.PublicController.feedBack()
POST    /secure-feedback									controllers.PublicController.saveFeedBack()
GET    /secure-feedback/:loc/:city									controllers.PublicController.saveLocalityFeedBack(loc : String,city : String)

GET    /help												controllers.PublicController.helpDocument()


GET		/doctor/add-to-favorite/:docId					controllers.PublicController.addToFavDoctor(docId: Long)
GET		/diagnostic/get-image/:diagnosticId/:imageId	controllers.PublicController.getDiagnosticImages(diagnosticId: Long,imageId: Long)
GET		/diagnostic/remove-diagnostic/:diagnosticId					controllers.PublicController.removeFavoriteDiagnosticCentre(diagnosticId: Long)
GET		/doctor/remove-pharmacy/:pharmacyId							controllers.PublicController.removeFavoritePharmacy(pharmacyId:Long)
GET		/bloodBank/get-image/:bloodBankId/:imageId					controllers.PublicController.getBloodBankImages(bloodBankId: Long,imageId: Long)
GET		/clinic/get-image/:clinicId/:imageId					controllers.PublicController.getClinicImages(clinicId: Long,imageId: Long)
GET		/user/get-image/:appUserId					controllers.PublicController.getAppUserImage(appUserId: Long)

GET 	/sendTestmail									controllers.DiagnosticController.sendSampleAttchEmail() 
# Sign up page
GET    /secure-doctor/join                              			controllers.UserController.joinUsDoctor()
GET    /secure-pharmacy/join                              			controllers.UserController.joinUsPharmacy()
GET    /secure-diagnostic/join                              		controllers.UserController.joinUsDiagnostic()
GET    /secure-user/join											controllers.UserController.joinUsPatient()
GET    /secure-clinic/join											controllers.UserController.joinUsClinic()
GET    /secure-blood-bank/join										controllers.UserController.joinUsBloodBank()

POST   /secure-join		                              			controllers.UserController.processJoinUs()

# Dashboard of LoggedInUser
GET		/secure-dashboard                                  controllers.UserActions.dashboard()

# Doctor's Actions
POST	/secure-doctor/doctor-basic-update					controllers.DoctorController.basicUpdate()
POST	/secure-doctor/doctor-images-update				controllers.DoctorController.imagesUpdate()
GET    	/secure-doctor/get-image/:id/:type                 controllers.PublicController.getImage(id: Long, type :String)
POST	/secure-doctor/add-work-experience					controllers.DoctorController.addWorkExperience()
GET		/secure-doctor/remove-work-experience/:docId/:id	controllers.DoctorController.removeWorkExperience(docId: Long, id: Long)
POST	/secure-doctor/add-award							controllers.DoctorController.addAward()
GET		/secure-doctor/remove-award/:docId/:id				controllers.DoctorController.removeAward(docId: Long, id: Long)
POST	/secure-doctor/add-education						controllers.DoctorController.addEducation()
GET		/secure-doctor/remove-education/:docId/:id			controllers.DoctorController.removeEducation(docId: Long, id: Long)
POST	/secure-doctor/add-social-work						controllers.DoctorController.addSocialWork()
GET		/secure-doctor/remove-social-work/:docId/:id		controllers.DoctorController.removeSocialWork(docId: Long, id: Long)
GET		/secure-doctor/add-favorite-pharmacy/:pharmacyId/:str							controllers.DoctorController.addFavoritePharmacy(pharmacyId: Long,str: String)
GET		/secure-doctor/my-favorite-pharmacies											controllers.DoctorController.myFavoritePharmacies()
GET		/secure-doctor/favorite-diagnostic-centres											controllers.DoctorController.myFavoriteDiagnosticCentres()
GET		/secure-doctor/add-favorite-diagnosticCentre/:diagnosticId/:str					controllers.DoctorController.addFavoriteDiagnosticCentre(diagnosticId: Long,str: String)
#GET  	/secure-doctor/get-doctors-by-specialization/:speczId							controllers.DoctorController.getDoctorsBySpecz(speczId: Long)



# Doctor's Clinics
GET    /secure-doctor/new-clinic                 		controllers.DoctorController.newClinic()
POST   /secure-doctor/new-clinic                 		controllers.DoctorController.processNewClinic()
GET    /secure-doctor/clinics                    		controllers.DoctorController.myClinics()
GET    /secure-doctor/edit-clinic-info/:id                  	controllers.DoctorController.editClinicInfo(id:Long)
GET    /secure-doctor/edit-clinic-schedule/:id                 controllers.DoctorController.editClinicSchedule(id:Long)
POST   /secure-doctor/update-clinic                            controllers.DoctorController.processUpdateClinicInfo()
POST   /secure-doctor/update-clinic-schedule                   controllers.DoctorController.processUpdateClinicSchedule()
GET    /secure-doctor/delete-clinic/:id                        controllers.DoctorController.deleteClinic(id:Long)


GET		/secure-doctor/sig-codes									controllers.DoctorController.showSigCodes()
POST	/secure-doctor/add-sig-code									controllers.DoctorController.addSigCode()
GET		/secure-doctor/all-appointments								controllers.DoctorController.viewAllAppointments()
GET		/secure-doctor/todays-appointments							controllers.DoctorController.viewTodaysAppointments()
GET		/secure-doctor/prescription/:appointmentId					controllers.DoctorController.showPrescriptionForm(appointmentId: Long)
POST	/secure-doctor/save-prescription							controllers.DoctorController.savePrescription()
GET		/secure-doctor/show-prescription/:prescriptionId			controllers.DoctorController.showPrescription(prescriptionId: Long)
GET		/secure-doctor/view-prescription/:prescriptionId			controllers.DoctorController.viewPrescription(prescriptionId: Long)
GET		/secure-doctor/share-prescription							controllers.DoctorController.sharePrescription(prId: Long, pharmacyId: String, diagnosticId: String, consent: Boolean)
GET		/secure-doctor/all-prescriptions					controllers.DoctorController.viewAllPrescription()
GET		/secure-doctor/todays-prescriptions						controllers.DoctorController.viewTodaysPrescription()
GET		/secure-doctor/products/get-json							controllers.DoctorController.getAllProductsJson()
GET		/secure-doctor/diagnostic-tests/get-json					controllers.DoctorController.getAllDiagnosticJson()
GET		/secure-doctor/follow-up-appointment/:clinicId/:patientId					controllers.DoctorController.getPatientFollowUPAppointment(clinicId : Long,patientId: Long)
POST		/secure-doctor/follow-up-appointment/:appointmentId/:patientId					controllers.DoctorController.processPatientFollowUPAppointment(appointmentId : Long,patientId: Long)
GET		/secure-doctor/get-doctors-list/:clinicId											controllers.DoctorController.getDoctorClinicInfoList(clinicId : Long)



#slug url (must be the last route in /doctor/)
GET 	/dr/:slugUrl								controllers.PublicController.getDoctorWithSlug(slugUrl:String)

# Patient Module
GET    /secure-user/my-doctors									controllers.PatientController.myFavouriteDoctors()
GET		/secure-user/prescriptions										controllers.PatientController.viewAllPatientPrescriptions()
GET		/secure-user/show-prescription/:prescriptionId			controllers.PatientController.viewPrescription(prescriptionId: Long)
GET		/secure-user/favorite-diagnostic-centres				controllers.PatientController.patientFavoriteDiagnosticCentres()
GET		/secure-user/my-pharmacies						controllers.PatientController.patientFavoritePharmacies()
#GET	/secure-user/appointments								controllers.PatientController.viewPatientAppointments()
GET		/secure-user/appointments									controllers.PatientController.viewMyAppointments()
GET		/secure-user/share-prescription							controllers.PatientController.sharePrescription(prId: Long, pharmacyId: String, diagnosticId: String)
GET    /secure-user/diagnostic-reports							 	controllers.PatientController.viewDiagnosticReports()
GET    /secure-user/blood-donation-info							 	controllers.PatientController.getPatientBloodDonationInfo()
GET    /secure-user/add-fav-clinic/:clinicId							 	controllers.PatientController.addClinicToLoggedInUser(clinicId : Long)
GET	   /secure-user/get-favorite-clinics								controllers.PatientController.getFavoriteClinics()
GET	   /secure-user/remove-favorite-clinic/:clinicId								controllers.PatientController.removeFavoriteClinic(clinicId : Long)
GET		/secure-user/schedule-appointment/:docclinicid								controllers.PatientController.scheduleAppointment(docclinicid:Long)




POST	/secure-pharmacy/upload-pharmacy-images					controllers.PharmacistController.uploadPharmacyImageProcess()
POST	/secure-pharmacy/basic-update								controllers.PharmacistController.pharmacyBasicUpdate()
POST	/secure-pharmacy/address-update			  				controllers.PharmacistController.pharmacyAddressUpdate()
GET		/secure-pharmacy/get-image/:pharmacyId/:fileId				controllers.PublicController.getPharmacyImages(pharmacyId: Long,fileId: Long)
GET		/secure-pharmacy/remove-image/:pharmacyId/:fileId			controllers.PharmacistController.removeImage(pharmacyId: Long,fileId: Long)
GET		/secure-pharmacy/add-to-user/:pharmacyId					controllers.PublicController.addPharmacyToLoggedInUser(pharmacyId: Long)

#GET 	/pharmacy/add-pharmacy-order/:pharmacyId/:prescriptionId		controllers.PharmacistController.addPharmacyOrderFromDoctor(pharmacyId: Long,prescriptionId: Long)

GET 	/secure-pharmacy/prescriptions								controllers.PharmacistController.pharmacyPrescriptionList(status: String ?= "any")
#GET 	/pharmacy/received-prescriptions					controllers.PharmacistController.receivedPrescriptionList()

GET 	/secure-pharmacy/todays-prescriptions						controllers.PharmacistController.viewTodaysPrescriptions()
POST 	/secure-pharmacy/from-and-to-date-prescriptions						controllers.PharmacistController.getFromAndToDatePrescriptions()

GET 	/secure-pharmacy/prescription/:pharmacyPrescriptionInfoId						controllers.PharmacistController.getPrescriptionDetails(pharmacyPrescriptionInfoId: Long)
#GET 	/secure-pharmacy/confirm-prescription/:pharmacyPrescriptionInfoId               controllers.PharmacistController.confirmPrescription(pharmacyPrescriptionInfoId: Long)
GET 	/secure-pharmacy/served-prescription/:pharmacyPrescriptionInfoId                controllers.PharmacistController.servedPrescription(pharmacyPrescriptionInfoId: Long)
#GET	/secure-pharmacy/order															controllers.PharmacistController.placePharmacyOrder()
#POST	/secure-pharmacy/order															controllers.PharmacistController.placePharmacyOrderProcess()


#slug url (must be the last route in /pharmacy/)
GET /pharmacy/:slugUrl										controllers.PublicController.getPharmacyWithSlug(slugUrl: String)


# Doagnostic Centre Module
POST	/secure-diagnostic/basic-update											controllers.DiagnosticController.diagnosticBasicUpdate()
POST	/secure-diagnostic/address-update											controllers.DiagnosticController.diagnosticAddressUpdate()
GET		/secure-diagnostic/remove-image/:diagnosticId/:fileId						controllers.DiagnosticController.removeDiagnosticImage(diagnosticId: Long,fileId: Long)
POST   /secure-diagnostic/upload-diagnostic-images             				controllers.DiagnosticController.uploadDiagnosticImageProcess()
GET    /secure-diagnostic/remove-report/:reportId/:diagnosticInfoId						  		controllers.DiagnosticController.removeDiagnosticReport(reportId: Long,diagnosticInfoId: Long)											
GET		/secure-diagnostic/add-to-user/:diagnosticId							controllers.PublicController.addDiagnosticCentreToLoggedInUser(diagnosticId: Long)
GET 	/secure-diagnostic/prescriptions										controllers.DiagnosticController.getDiagnosticCentrePrescriptions(status: String ?= "any")
GET 	/secure-diagnostic/prescription/:dpInfoId								controllers.DiagnosticController.showDiagnosticPrescription(dpInfoId: Long)
GET		/secure-diagnostic/order-confirmed/:diagInfoId							controllers.DiagnosticController.orderServed(diagInfoId: Long)
#GET	/secure-diagnostic/order-cancelled/:diagInfoId							controllers.DiagnosticController.orderCancelled(diagInfoId: Long)
GET		/secure-diagnostic/ordered-tests/:diagInfoId							controllers.DiagnosticController.viewOrderedTest(diagInfoId: Long)
GET   	/secure-diagnostic/upload-diagnostic-Report/:diagInfoId				controllers.DiagnosticController.uploadDiagnosticReport(diagInfoId: Long)
POST    /secure-diagnostic/upload-diagnostic-Report/:diagInfoId		  		controllers.DiagnosticController.uploadDiagnosticReportProcess(diagInfoId: Long)
GET     /secure-diagnostic/todays-appointments									controllers.DiagnosticController.TodaysDiagnosticPrescriptions()
POST    /secure-diagnostic/from-to-prescription									controllers.DiagnosticController.getFromToDatePrescriptions()
GET    /secure-diagnostic/download-report/:reportId/:diagnosticInfoId						  		controllers.DiagnosticController.downloadDiagnosticReport(reportId: Long,diagnosticInfoId: Long)

#slug url (must be the last route in /diagnostic/)
GET 	/diagnostic/:slugUrl								controllers.PublicController.getDiagnosticCentreWithSlug(slugUrl: String)





# Remove later (at Beta Launch)
#GET    /                                  controllers.Application.index()
#GET    /:str		                      controllers.Application.indexX(str: String)


GET		/static/fav/pharmacies							controllers.PharmacistController.staticFavPharmacies()

GET		/secure-admin/specializations							controllers.MednetworkAdminController.getSpecializationList()
POST	/secure-admin/add-specialization						controllers.MednetworkAdminController.addSpecialization()
POST	/secure-admin/update-specialization					controllers.MednetworkAdminController.updateSpecialization()
GET		/secure-admin/feedback-list							controllers.MednetworkAdminController.getFeedbackList()
GET		/secure-admin/delete-feedback/:id						controllers.MednetworkAdminController.deleteFeedback(id: Long)
GET		/secure-admin/get-user-date-between-dates/:from/:to 	controllers.MednetworkAdminController.getUserDateBetweenDates(from: String, to: String)
GET    	/secure-admin/purge-doctor-find																controllers.MednetworkAdminController.purgeDoctor()
POST    /secure-admin/purge-doctor-details/:role																controllers.MednetworkAdminController.getAppUserDetails(role: String)
GET     /secure-admin/purge-doctor/:id																controllers.MednetworkAdminController.processPurgeDoctor(id: Long)
GET     /secure-admin/purge-pharmacy-find																controllers.MednetworkAdminController.purgePharmacy()
GET     /secure-admin/purge-pharmacy/:id																controllers.MednetworkAdminController.processPurgePharmacy(id: Long)
GET     /secure-admin/purge-diagnostic-find																controllers.MednetworkAdminController.purgeDiagnosticCentre()
GET     /secure-admin/purge-diagnostic/:id																controllers.MednetworkAdminController.processPurgeDiagnosticCentre(id: Long)
GET		/secure-admin/primary-cities							controllers.MednetworkAdminController.getPrimaryCitiesList()
POST	/secure-admin/add-primary-city							controllers.MednetworkAdminController.addPrimaryCity()
GET		/add-primary-city-to-session/:cityId			controllers.PublicController.addPrimaryCityToSession(cityId: Long)
GET		/secure-admin/add-master-product							controllers.MednetworkAdminController.getMasterProductForm()
POST	/secure-admin/add-master-product							controllers.MednetworkAdminController.addMasterProduct()
GET		/secure-admin/edit-master-product/:id							controllers.MednetworkAdminController.editMasterProduct(id: Long)
POST	/secure-admin/update-master-product							controllers.MednetworkAdminController.updateMasterProduct()
GET		/secure-admin/remove-master-product/:id							controllers.MednetworkAdminController.removeMasterProduct(id: Long)
GET		/secure-admin/add-master-diagnostic-test							controllers.MednetworkAdminController.getMasterDiagnosticTestForm()
POST	/secure-admin/add-master-diagnostic-test							controllers.MednetworkAdminController.addMasterDiagnosticTest()
GET		/secure-admin/edit-master-diagnostic-test/:id							controllers.MednetworkAdminController.editMasterDiagnosticTest(id: Long)
POST	/secure-admin/update-master-diagnostic-test							controllers.MednetworkAdminController.updateMasterDiagnosticTest()
GET		/secure-admin/remove-master-diagnostic-test/:id							controllers.MednetworkAdminController.removeMasterDiagnosticTest(id: Long)
GET		/secure-admin/add-master-sig-code							controllers.MednetworkAdminController.getMasterSigCodeForm()
POST	/secure-admin/add-master-sig-code							controllers.MednetworkAdminController.addMasterSigCode()
GET		/secure-admin/edit-master-sig-code/:id							controllers.MednetworkAdminController.editMasterSigCode(id: Long)
POST	/secure-admin/update-master-sig-code							controllers.MednetworkAdminController.updateMasterSigCode()
GET		/secure-admin/remove-master-sig-code/:id							controllers.MednetworkAdminController.removeMasterSigCode(id: Long)
GET		/secure-admin/add-locality											controllers.MednetworkAdminController.addLocality()
POST	/secure-admin/save-locality											controllers.MednetworkAdminController.saveLocality()
GET		/secure-admin/edit-locality/:localityId								controllers.MednetworkAdminController.editLocality(localityId : Long)
GET		/secure-admin/remove-locality/:localityId							controllers.MednetworkAdminController.removeLocality(localityId : Long)





#############################	PRODUCTION	#################################################################################


#GET    /doctor/prescription						controllers.DoctorController.doctorPrescription()

GET 	/viewappointments							controllers.DoctorController.doctorViewAppointment()
#GET    /doctor/today-appointment                        controllers.DoctorController.viewTodaysAppointment()	
GET	   	/doctor/appointments						   controllers.DoctorController.doctorAppointments()
GET		/doctor/search/appointment					controllers.DoctorController.doctorSearchAppointment()

GET    /userform/assistant/               		controllers.AssistantController.form()
POST   /userform/assistant/               		controllers.AssistantController.process()
GET    /scheduleappointment/              		controllers.AppointmentController.form()
POST   /scheduleappointment/              		controllers.AppointmentController.process()			
POST 	/patient/process-appointment/:apptId			controllers.PatientController.processAppointment(apptId:Long)


#Pharmacy Module


GET   	/pharmacy/add-pharmacy-product                      					controllers.PharmacistController.addPharmacyProduct()
POST   	/pharmacy/add-pharmacy-product                      					controllers.PharmacistController.addPharmacyProductProcess()
GET		/pharmacy/pharmacy-product-list											controllers.PharmacistController.getPharmacyProducts()
GET	    /pharmacy/addProductToInventory/:productId/:pharmacyId            		controllers.PharmacistController.addProductToInventory(productId :Long,pharmacyId : Long)
POST	/pharmacy/addProductToInventory/:productId/:pharmacyId            		controllers.PharmacistController.addProductToInventoryProcess(productId:Long,pharmacyId : Long)
GET   	/edit-product/:id                      									controllers.PharmacistController.editProduct(id: Long)
#GET     /remove-product/:id                      								controllers.PharmacistController.removeProduct(id: Long)
POST	/addProductToInventory/													controllers.PharmacistController.addProductForm(id: Long)
		
#GET		/order									controllers.PharmacistController.orderRecord()
#GET     /searchProduct                           controllers.PharmacistController.searchForm()
POST  	/searchProduct                           controllers.PharmacistController.searchProduct(arg: String ?= "")
GET   	/place-product-order                     	controllers.PharmacistController.placeProductOrder()
GET   	/place-product-order/process              controllers.PharmacistController.placeProductOrderProcess()
POST   /pharmacy/add-product-to-showcase                controllers.PharmacistController.addShowCasedProduct()
GET    /pharmacy/remove-product-from-showcase/:id       controllers.PharmacistController.removeProductFromShowcaseList(id: Long)
GET		/pharmacy/order/:id						controllers.PharmacistController.pharmacyPlaceOrder(id: Long)

GET 	/pharmacy/order									controllers.PharmacistController.orderManagement()

#GET 	/create-Mr-schedule				controllers.DoctorController.createMrSchedule()
#POST	/create-Mr-appointment 			controllers.DoctorController.createMrAppointment()


#GET 	/create-Mr-schedule						controllers.DoctorController.createMrSchedule()
#POST	/create-Mr-appointment 					controllers.DoctorController.createMrAppointment()



#GET    /medical-representative                     controllers.Application.medicalRepresentative()
#POST   /medical-representative/proccess            controllers.Application.medicalRepresentativeProccess()
GET    /diagRep/                          		controllers.Application.diagnosticRep()
POST   /diagRepProccess/                  		controllers.Application.diagnosticRepProccess()
#POST   /userform/patientproccess/       		controllers.PatientController.process()

GET    /home/                             		controllers.Application.homePage()
GET    /questionform                      		controllers.PatientController.displayQuestion()
POST   /askQuestion                       		controllers.PatientController.askQuestion()

GET    /patient/diagnostics               		controllers.PatientController.diagnosticList()
GET    /add-diagnostic-center/:id               controllers.PatientController.saveDiagnosticCenter(id: Long)
GET    /patient/my-diag-centers               	controllers.PatientController.myDiagnosticCenters()
GET    /patient/remove-diag-centers/:id         controllers.PatientController.removePatientDiagnoCenter(id: Long)
GET    /patient/favdoctors						controllers.PatientController.patientMyFavDoctors()
GET    /static/patient/favdoctors						controllers.PatientController.staticPatientMyFavDoctors()
GET 	/patient/delete-fav-doc/:id					controllers.PatientController.deleteMyFavDoctors(id:Long)
GET		/patient/search-doctors/:query					controllers.PatientController.searchDoctors(query:String)
GET    /answerform                       		 controllers.DoctorController.displayAnswer()
POST   /ansQuestion/:qaId                 		 controllers.DoctorController.answerQuestion(qaId: Long)
GET    /static/new/appointment					controllers.PatientController.staticPatientNewAppointment()
GET 	/doctor/schedule-appointment/:docclinicid		controllers.PublicController.scheduleAppointment(docclinicid:Long)
GET    /patient/display-appointment/:docClinicId/:timeMillis	controllers.PublicController.displayAppointment(docClinicId:Long,timeMillis:Long)
GET    /static/patient/view/appointments		controllers.PatientController.staticPatientViewAppointments()
#GET    /diagnosticlist                   	 	controllers.DiagnosticController.diagnosticlist()
#GET    /diagnostic-service-list/:id            controllers.DiagnosticController.diagnosticServiceslist(id: Long)
GET    /diagnostic-delete/:id             		controllers.DiagnosticController.deleteCenter(id: Long)
GET    /diagnostic-edit/:id						controllers.DiagnosticController.editDiagnosticDetails(id: Long)
POST    /diagnostic-edit 						controllers.DiagnosticController.diagnosticEditprocess()
GET    /diagnostic-search      					controllers.DiagnosticController.diagnosticSearch()
GET    /diagnostic-search/list 					controllers.DiagnosticController.diagnosticSearchProcess()
#GET    /diagnosticrep/doctor-list         		controllers.DRController.doctorList()
GET    /diagnosticrep			         		controllers.DRController.addDiagRep()
POST    /diagnosticrep/save		         		controllers.DRController.addDiagRepProcess()
GET    /diagnosticrep/list			        	controllers.DRController.diagnosticRepresentativeList()
GET    /diagnosticrep/doctor-search	         	controllers.DRController.search()
GET    /diagnosticrep/doctorsearch	         	controllers.DRController.searchProcess()
GET    /diagnosticrep/add-doctor/:id      		controllers.DRController.addDoctor(id: Long)
GET    /diagnosticrep/remove-doctor/:id   		controllers.DRController.removeDoctor(id: Long)
GET    /diagnostic-centre/all-doctors      		controllers.DRController.displayDiagnosticCentreDoctors()

#Diagnostic Profile

#GET		/diagnostic/add-order-from-doctor/:diagnosticId/:prescriptionId									controllers.DiagnosticController.addOrderFromDoctor(diagnosticId: Long,prescriptionId: Long)
#GET		/diagnostic/display-orders							controllers.DiagnosticController.viewDiagnosticOrders()
#GET		/diagnostic/order-confirmed/:diagnosticId/:orderId							controllers.DiagnosticController.orderConfirmed(diagnosticId: Long,orderId: Long)
#GET		/diagnostic/order-cancelled/:diagnosticId/:orderId							controllers.DiagnosticController.orderCancelled(diagnosticId: Long,orderId: Long)
#GET		/diagnostic/remove-order/:diagnosticId/:orderId						controllers.DiagnosticController.removeDiagnosticOrder(diagnosticId: Long,orderId: Long)
#GET		/diagnostic/ordered-tests/:diagnosticId/:orderId						controllers.DiagnosticController.viewOrderedTest(diagnosticId: Long,orderId: Long)
#GET   	/diagnostic/upload-diagnostic-Report/:orderId/:reportId								controllers.DiagnosticController.uploadDiagnosticReport(orderId: Long,reportId: Long)
#POST   /diagnostic/upload-diagnostic-Report/:orderId/:reportId		  		controllers.DiagnosticController.uploadDiagnosticReportProcess(orderId: Long,reportId: Long)
#GET		/diagnostic/sample-collected/:orderId/:reportId					controllers.DiagnosticController.sampleCollected(orderId: Long,reportId: Long)
#POST		/diagnostic/diagnostic-prescription-list/:id						controllers.DiagnosticController.diagnosticPrescriptionList(id: Long)
#GET		/report-generated						controllers.DiagnosticController.reoprtReady(id: Long)


GET    /test				            		controllers.DiagnosticController.addTest()
POST   /test/save					       		controllers.DiagnosticController.addTestProcess()
GET    /test-list/:diagnosticCentreId/:patientId   controllers.DiagnosticController.diagnosticTestList(diagnosticCentreId: Long,patientId: Long)
GET    /diagnostic-test-list				    controllers.DiagnosticController.diagnosticCentreTestList()	
#GET   /add-test-done						  	controllers.DiagnosticController.addTestDone()
#GET    /test-list/:id				            controllers.DiagnosticController.diagnosticCentreTestList(id: Long)																																
GET     /diagnostic/get-showcased-image/:diagnosticServiceId/:imageId	controllers.DiagnosticController.getShowCasedImages(diagnosticServiceId: Long,imageId: Long)
POST	/diagnostic/add-service-to-showcase						controllers.DiagnosticController.addShowCasedService()
GET		/diagnostic/remove-service-from-showcase/:id			controllers.DiagnosticController.removeServiceFromShowcaseList(id: Long)
GET		/diagnostic/remove-image-from-showcasedService			controllers.DiagnosticController.removeShowCasedImage(showCasedServiceId: Long,imageId: Long)

																																



	
	
	


GET    /patient-search      					controllers.DiagnosticController.patientSearch()
GET    /patient-search/list 					controllers.DiagnosticController.patientSearchProcess()


#Clinics

GET    	/secure-clinic/invite-doctor      					controllers.ClinicController.searchDoctorsByEmail()
POST    /secure-clinic/invite-doctor      					controllers.ClinicController.processSeachDoctorsByEmailId()
GET		/secure-clinic/add-doctor/:docId/:clinicId/:verCode			controllers.ClinicController.addDoctorToTheClinic(docId: Long, clinicId : Long, verCode:String)
GET		/secure-clinic/view-all-doctors											controllers.ClinicController.getDoctors()
POST	/secure-clinic/upload-clinic-images										controllers.ClinicController.uploadClinicImageProcess()
GET		/secure-clinic/remove-image/:clinicId/:fileId							controllers.ClinicController.removeClinicImage(clinicId: Long,fileId: Long)
POST	/secure-clinic/basic-update												controllers.ClinicController.clinicBasicUpdate()
POST	/secure-clinic/address-update 											controllers.ClinicController.clinicAddressUpdate()
GET		/secure-clinic/add-clinic-user											controllers.ClinicController.addClinicUserForm()
POST	/secure-clinic/save-clinic-user											controllers.ClinicController.saveClinicUser()	
GET		/secure-clinic/all-clinic-users											controllers.ClinicController.listClinicUsers()
GET		/secure-clinic/edit-clinic-user/:clinicUserId							controllers.ClinicController.editClinicUser(clinicUserId : Long)
POST	/secure-clinic/update-clinic-user										controllers.ClinicController.updateClinicUser()
GET		/secure-clinic/get-clinic-doctors/:clinicUserId							controllers.ClinicController.getDoctorClinicInfos(clinicUserId : Long)
POST	/secure-clinic/assign-clinic-doctors/:clinicUserId						controllers.ClinicController.assaignDoctorsToClinicUser(clinicUserId : Long)
GET		/secure-clinic/remove-clinic-user/:clinicUserId							controllers.ClinicController.removeClinicUser(clinicUserId : Long)
GET		/secure-clinic/weekly-appointments/:docClinicInfoId						controllers.ClinicController.viewClinicWeeklyAppointments(docClinicInfoId: Long)
GET		/secure-clinic/weekly-appointments-json/:docClinicInfoId				controllers.ClinicController.getClinicCalendarEventsJson(docClinicInfoId: Long)
GET		/secure-clinic/book-appointment-form/:docClinicId						controllers.ClinicController.bookAppointmentForm(docClinicId: Long)
GET		/secure-clinic/verify-appUser/:emailId/:docClinicId						controllers.ClinicController.sendVerificationToAppUser(emailId : String,docClinicId: Long)
GET		/secure-clinic/book-appUser-appointment/:docClinicId/:patientId			controllers.ClinicController.getClinicPatientAppointmentForm(docClinicId : Long,patientId : Long)
POST	/secure-clinic/save-appointment/:appointmentId/:patientId	    		controllers.ClinicController.processClinicPatientAppointment(appointmentId:Long,patientId : Long) 
GET		/secure-clinic/new-patient-form/:docClinicId/:email											controllers.ClinicController.getNewPatientForm(docClinicId : Long,email:String)
POST	/secure-clinic/save-patient/:docClinicId												controllers.ClinicController.savePatientProfile(docClinicId : Long)
POST	/secure-clinic/verify-confirmation-code/:appUserId/:docClinicId							controllers.ClinicController.verifyMobileConfirmationCode(appUserId: Long,docClinicId : Long)

	



#slug url (must be the last route in /clinic/)
GET 	/clinic/:slugUrl								controllers.PublicController.getClinicWithSlug(slugUrl:String)



#BloodBank
GET    /secure-blood-bank/get-blood-donors      					controllers.BloodBankController.getBloodDonorsInCityForm()
POST    /secure-blood-bank/list-blood-donors      					controllers.BloodBankController.listBloodDonorsInCity()
GET    /secure-blood-bank/received-blood-info-form      					controllers.BloodBankController.receivedBloodDonorFrom()
GET    /secure-blood-bank/get-received-blood-info/:emailId/:appUserId      					controllers.BloodBankController.getReceivedBloodDonorInfo(emailId: String,appUserId: Long)
POST    /secure-blood-bank/save-received-blood-info/:patientId      					controllers.BloodBankController.saveReceivedBloodDonorInfo(patientId: Long)
POST	/secure-blood-bank/upload-blood-bank-images										controllers.BloodBankController.uploadBloodBankImageProcess()
GET		/secure-blood-bank/remove-image/:bloodBankId/:fileId						controllers.BloodBankController.removeBloodBankImage(bloodBankId: Long,fileId: Long)
POST	/secure-blood-bank/basic-update												controllers.BloodBankController.bloodBankBasicUpdate()
POST	/secure-blood-bank/address-update 											controllers.BloodBankController.bloodBankAddressUpdate()
GET		/secure-blood-bank/from-to-date-donations											controllers.BloodBankController.fromToDateBloodDonationsForm()
POST	/secure-blood-bank/from-to-date-donations											controllers.BloodBankController.getFromToDateBloodDonations()
GET		/secure-blood-bank/get-blood-donor-form											controllers.BloodBankController.getBloodDonorByEmailForm()
GET		/secure-blood-bank/find-blood-donor/:emailId											controllers.BloodBankController.findBloodDonorByEmail(emailId : String)
GET		/secure-blood-bank/add-blood-donor/:appUserId											controllers.BloodBankController.addBloodDonorToBloodBank(appUserId : Long)
GET		/secure-blood-bank/view-blood-donors													controllers.BloodBankController.listBloodBankBloodDonors()
GET		/secure-blood-bank/remove-blood-donor/:appUserId													controllers.BloodBankController.removeBloodBankBloodDonor(appUserId : Long)
GET		/secure-blood-bank/get-blood-donor-info/:patientId											controllers.BloodBankController.getBloodDonorInfo(patientId : Long)
GET		/secure-blood-bank/new-patient-form/:email										controllers.BloodBankController.getBloodBankNewPatientForm(email : String)
POST	/secure-blood-bank/save-patient												controllers.BloodBankController.saveBloodBankPatientProfile()
POST		/secure-blood-bank/verify-confirmation-code/:appUserId								controllers.BloodBankController.verifyConfirmationCode(appUserId : Long)




#slug url (must be the last route in /blood-bank/)
GET 	/blood-bank/:slugUrl								controllers.PublicController.getBloodBankWithSlug(slugUrl:String)



																										
#MR Module

GET		/mr/hierarchy							   controllers.MRController.viewHierarchy()

GET    /mr/search-doctor-list                                      controllers.MRController.doctorList()
GET    /mr/add-doctor/:id                          controllers.MRController.addDoctor(id: Long)
GET    /mr/remove-doctor/:id                       controllers.MRController.removeDoctor(id: Long)
GET    /mr/doctor-list                             controllers.MRController.mrDoctorList()
GET    /mr/add-mr                                  controllers.MRController.addMR()
GET    /mr/list-mr                                 controllers.MRController.mrList()
GET    /mr/hq                                      controllers.MRController.headQuarter()
GET    /mr/dcr-list                                controllers.MRController.listDCR()
POST   /mr/new-dcr                                 controllers.MRController.processNewDCR()
GET    /mr/show-dcr/:id                            controllers.MRController.addDCRLineItem(id: Long)
POST   /mr/dcr/add-line-item                       controllers.MRController.processDCRLineItem()
POST   /mr/dcr/delete-line-item/:dcrid/:lineitemid   controllers.MRController.removeDCRLineItem(dcrid: Long,lineitemid: Long)
GET    /mr/submit-dcr-line-items/:dcrid                  controllers.MRController.submitDCRLineItems(dcrid: Long)
GET    /mr/approve-dcr/:dcrid                            controllers.MRController.approveDCRLineItem(dcrid: Long)
GET    /mr/reject-dcr/:dcrid                             controllers.MRController.rejectDCRLineItem(dcrid: Long)
GET    /mr/delete-dcr/:dcrid                             controllers.MRController.deleteDCR(dcrid: Long)
POST   /mr/search-subordinate-dcr                        controllers.MRController.searchSubordinateDcr()
GET    /search                                           controllers.MRController.search()
GET    /mr/display-appointment/:id                       controllers.MRController.scheduleAppointment(id:String)
POST   /mr/add-head-quarter                              controllers.MRController.addHeadQuarter()
GET    /mr/tour-plan                                     controllers.MRController.tourPlan()
POST   /mr/add-tour-plan                                 controllers.MRController.addTourPlan()
GET    /mr/tourplan-lineitem/:tourplanid                 controllers.MRController.tourPlanLineItem(tourplanid: Long)
POST   /mr/tourplan/add-line-item/:tourplanid/:lineitemid/:index       controllers.MRController.addTourPlanLineItem(tourplanid: Long,lineitemid: Long,index: Long)
POST   /mr/submit-tourplan                                             controllers.MRController.submitTourPlan()
GET    /mr/tourplan-lineitem-visibity                                  controllers.MRController.tpLineItemVisibility()
POST   /mr/tourplan-lineitem-visibity-proccess/:mrid/:index                         controllers.MRController.tpLineItemVisibilityProccess(mrid: Long,index: Long)
POST    /mr/add                                    controllers.MRController.medicalRepresentativeProccess()
GET	    /mr/editmr                                 controllers.MRController.editMRProccess()
GET     /mr/del	                                   controllers.MRController.removeMR(id: Long)
GET     /mr/edit/:id	                           controllers.MRController.editMR(id: Long)
GET		/mr/add-designation							controllers.MRController.addDesignation()
POST	/mr/add-designation							controllers.MRController.addDesignationProccess()




#common module
GET    /new-product                                controllers.ProductController.productForm()
POST   /new-product                                controllers.ProductController.saveProduct()
GET		/mr/new-product									controllers.ProductController.pharmaceuticalProductForm()
POST	/mr/new-product									controllers.ProductController.savePharmceuticalProduct()
GET    /view-products                              controllers.ProductController.displayProduct()
#GET    /edit-product/:id                           controllers.ProductController.editProduct(id: Long)


#sample data
#GET		/mr-sample									controllers.SampleDataController.mrSample()
#GET		/add-clinic									controllers.SampleDataController.joinUsClinic()


#Mednetwork-Admin
#GET		/admin						controllers.SampleDataController.mednetAdmin()
#GET		/add-primary-city						controllers.SampleDataController.addPrimaryCity()
#GET		/default-primarycity					controllers.SampleDataController.addDefaultPrimaryCity()
#GET 	/specz									controllers.SampleDataController.createDocSpez()
#GET 	/add_clinic									controllers.SampleDataController.patientTest()

#GET    /appointment					controllers.SampleDataController.createAppointment()
#GET    /blood-bank					controllers.SampleDataController.addBloodBank()
#GET    /mr							controllers.SampleDataController.mrSampleData()




#Cron
GET		/cron/start						controllers.CronController.startCron()

#test
GET		/secure-doctor/weekly-appointments				controllers.DoctorController.viewWeeklyAppointments()
GET		/secure-doctor/calendar-appointments-json		controllers.DoctorController.getCalendarEventsJson()
#GET		/sendgrid										controllers.SampleDataController.sendGrid()

# Zoho Verification
GET		/zohoverify/verifyforzoho.html					controllers.Assets.at(path="/public", file="/verifyforzoho.html")

########################## MedNetwork Android App ###############################################

#MR Module

GET    /m/android/mr/login		                                       controllers.AndroidController.login(email: String ?= "email" , password: String ?= "password")
#GET    /m/android/mr/logout                                            controllers.WebServices.logout()
#GET    /m/android/mr/doctor-list                                       controllers.WebServices.myDoctor()
#GET   /m/android/mr/product-list                                      controllers.WebServices.myProduct()



# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file                                    controllers.Assets.at(path="/public", file)




