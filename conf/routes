# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


#Blog

GET		/blog/create-blog-admin			controllers.SampleDataController.createBlogAdmin()
GET		/blog/login						controllers.LoginController.blogAdminLoginForm()

GET		/blog							controllers.BlogController.blogHome()
GET		/blog/admin/new-category				controllers.BlogController.categoryForm()
POST	/blog/admin/new-category				controllers.BlogController.processCategoryForm()
GET		/blog/admin/categories				controllers.BlogController.categories()
GET		/blog/admin/edit-category/:id			controllers.BlogController.editCategoryForm(id: Long)
GET		/blog/admin/new-article				controllers.BlogController.articleForm()
POST	/blog/admin/new-article				controllers.BlogController.processArticleForm()
GET		/blog/admin/articles/:categoryId		controllers.BlogController.articles(categoryId: Long)
GET		/blog/admin/edit-article/:id			controllers.BlogController.editArticleForm(id: Long)
GET		/blog/get-thumbnail/:id			controllers.BlogController.getThumbnail(id: Long)
GET		/blog/get-main-image/:id		controllers.BlogController.getMainImage(id: Long)

GET		/blog/add-comment/:id/:message	controllers.BlogController.addComment(id: Long, message: String)
GET		/blog/add-comment-reply/:id/:cid/:message		controllers.BlogController.addCommentReply(id: Long, cid: Long, message: String)

POST	/blog/add-social-comment		controllers.BlogController.addSocialComment()
POST	/blog/add-social-comment-reply	controllers.BlogController.addSocialCommentReply()

GET		/blog/:id/:slug					controllers.BlogController.showArticle(id: Long, slug: String)
GET		/blog/:idorslug					controllers.BlogController.showArticleWithIdOrSlug(idorslug: String)
GET		/sitemap.xml					controllers.Application.sitemap()


# Home page
GET    /                                  controllers.Application.index()
POST   /login                             controllers.LoginController.processLogin()
GET    /logout                            controllers.LoginController.processLogout()



# Remove later (at Beta Launch)
#GET    /:str		                      controllers.Application.indexX(str: String)
####################################################################################################


# Sign up page
GET    /join                              controllers.UserController.joinUs()
POST   /join                              controllers.UserController.processJoinUs()

# patient actions
GET    /user/schedule-appointment         controllers.PatientController.scheduleAppointment()
GET    /user/display-appointment/:id      controllers.PatientController.displayAppointment(id:String)
POST   /doctor/request-appointment        controllers.DoctorController.requestAppointment()


# doctor actions
GET    /doctor/new-assistant              controllers.DoctorController.newAssistant()
GET    /doctor/new-clinic                 controllers.DoctorController.newClinic()
POST   /doctor/new-clinic                 controllers.DoctorController.processNewClinic()
GET    /doctor/clinics                    controllers.DoctorController.myClinics()
GET   	/doctor/manage-clinic/:id		controllers.DoctorController.manageClinic(id:Long)
GET    /doctor-profile                    controllers.DoctorController.doctorProfile()
GET    /doctor-experience                 controllers.DoctorController.doctorExperience()
POST   /doctor-experience                 controllers.DoctorController.processDoctorExperience()
GET    /doctor-education                  controllers.DoctorController.doctorEducation()
POST   /doctor-education                  controllers.DoctorController.processDoctorEducation()
GET    /doctor-award                      controllers.DoctorController.doctorAward()
POST   /doctor-award                      controllers.DoctorController.processDoctorAward()
GET		/doctor-language				controllers.DoctorController.doctorLanguage()
POST	/doctor-language				controllers.DoctorController.processDoctorLanguage()
GET		/doctor-socialwork				controllers.DoctorController.doctorSocialWork()
POST	/doctor-socialwork				controllers.DoctorController.processDoctorSocialWork()
GET		/doctor-publication				controllers.DoctorController.doctorPublication()
POST	/doctor-publication				controllers.DoctorController.processDoctorPublication()

GET     /doctor/prescription			controllers.DoctorController.doctorPrescription()
GET     /doctor/appointments			controllers.DoctorController.doctorAppointments()
GET     /doctor/view/appointment		controllers.DoctorController.doctorViewAppointment()
GET		/doctor/profile					controllers.DoctorController.doctorProfileS()


GET    /userform/doctor/                  controllers.DoctorController.form()
POST   /userform/doctor/                  controllers.DoctorController.process()
GET    /userform/assistant/               controllers.AssistantController.form()
POST   /userform/assistant/               controllers.AssistantController.process()
GET    /scheduleappointment/              controllers.AppointmentController.form()
POST   /scheduleappointment/              controllers.AppointmentController.process()
#GET    /newProduct                        controllers.PharmacistController.productForm()
#POST   /newProduct                        controllers.PharmacistController.saveProduct()					
#GET    /products                          controllers.PharmacistController.displayProducts()
POST   /editproduct/                      controllers.PharmacistController.editProduct(id: Long)
GET    /searchProduct                     controllers.PharmacistController.searchForm()
POST   /searchProduct			        controllers.PharmacistController.searchProduct(arg: String ?= "")
POST		/addProductToInventory/				controllers.PharmacistController.addProductForm(id: Long)
POST   /addProductToInventory1/            controllers.PharmacistController.addToInventory(id:Long)		
GET		/order								controllers.PharmacistController.orderRecord()

GET    /new-product                       controllers.ProductController.productForm()
POST   /new-product                       controllers.ProductController.saveProduct()
GET    /view-products                     controllers.ProductController.displayProduct()

#GET 	/create-Mr-schedule				controllers.DoctorController.createMrSchedule()
#POST	/create-Mr-appointment 			controllers.DoctorController.createMrAppointment()

#GET		/doctor/today-appointment		controllers.DoctorController.viewTodaysAppointment()	


GET    /medical-representative            controllers.Application.medicalRepresentative()
POST   /medical-representative/proccess   controllers.Application.medicalRepresentativeProccess()
GET    /diagRep/                          controllers.Application.diagnosticRep()
POST   /diagRepProccess/                  controllers.Application.diagnosticRepProccess()
GET    /sampledata/populate               controllers.SampleDataController.populate()
GET    /sampledata/cleanup                controllers.SampleDataController.cleanUp()
GET    /sampledata/temp                   controllers.SampleDataController.temp()

#POST   /userform/patientproccess/       controllers.PatientController.process()

GET    /home/                             controllers.Application.homePage()
GET    /questionform                      controllers.PatientController.displayQuestion()
POST   /askQuestion                       controllers.PatientController.askQuestion()

GET    /patient/diagnostics               controllers.PatientController.diagnosticList()
GET    /add-diagnostic-center/:id               controllers.PatientController.saveDiagnosticCenter(id: Long)
GET    /patient/my-diag-centers               controllers.PatientController.myDiagnosticCenters()
GET    /patient/remove-diag-centers/:id               controllers.PatientController.removePatientDiagnoCenter(id: Long)


GET    /answerform                        controllers.DoctorController.displayAnswer()
POST   /ansQuestion/:qaId                 controllers.DoctorController.answerQuestion(qaId: Long)
# doctor action
GET    /dashboard						controllers.UserActions.dashboard()
GET    /register-patient/               controllers.DoctorController.registerPatient()
POST   /register-patient-proccess/      controllers.DoctorController.registerPatientProccess()

#Diagnostic module	
GET    /diagnosticregistration            		controllers.DiagnosticController.diagnosticCenter()
POST   /diagnosticregistration/save       		controllers.DiagnosticController.diagnosticCenterProcess()
#GET    /diagnosticlist                   	 	controllers.DiagnosticController.diagnosticlist()
#GET    /diagnostic-service-list/:id            controllers.DiagnosticController.diagnosticServiceslist(id: Long)
GET    /diagnostic-delete/:id             		controllers.DiagnosticController.deleteCenter(id: Long)
GET    /diagnostic-edit/:id						controllers.DiagnosticController.editDiagnosticDetails(id: Long)
POST    /diagnostic-edit 						controllers.DiagnosticController.diagnosticEditprocess()
GET    /diagnostic-search      					controllers.DiagnosticController.diagnosticSearch()
GET    /diagnostic-search/list 					controllers.DiagnosticController.diagnosticSearchProcess()
GET    /diagnosticrep/doctor-list         		controllers.DRController.doctorList()
GET    /diagnosticrep			         		controllers.DRController.addDiagRep()
POST    /diagnosticrep/save		         		controllers.DRController.addDiagRepProcess()
GET    /diagnosticrep/list			        	controllers.DRController.diagnosticRepresentativeList()
GET    /diagnosticrep/doctor-search	         	controllers.DRController.search()
GET    /diagnosticrep/doctorsearch	         	controllers.DRController.searchProcess()
GET    /diagnosticrep/add-doctor/:id      		controllers.DRController.addDoctor(id: Long)
GET    /diagnosticrep/remove-doctor/:id   		controllers.DRController.removeDoctor(id: Long)
GET    /diagnostic-centre/all-doctors      		controllers.DRController.displayDiagnosticCentreDoctors()

GET    /upload-patient-file  					controllers.DiagnosticController.uploadFile()
POST    /upload-patient-file/save		  		controllers.DiagnosticController.uploadFileProcess()
GET    /download						  		controllers.DiagnosticController.downloadFile()
GET    /add-test-done						  	controllers.DiagnosticController.addTestDone()


#Diagnostic Test
GET    /test				            		controllers.DiagnosticController.addTest()
POST   /test/save					       		controllers.DiagnosticController.addTestProcess()
GET    /test-list/:id				            controllers.DiagnosticController.diagnosticTestList(id: Long)
GET		/place-order				controllers.DiagnosticOrderController.receive()		
GET		/display-orders/:id				controllers.DiagnosticOrderController.viewOrders(id: Long)																																		

#MR Module
GET    /doctor-list                       controllers.MRController.doctorList()
GET    /mr/add-doctor/:id                 controllers.MRController.addDoctor(id: Long)
GET    /mr/remove-doctor/:id              controllers.MRController.removeDoctor(id: Long)
GET    /mr/doctor-list                    controllers.MRController.mrDoctorList()
GET    /mr/add-mr                         controllers.MRController.addMR()
GET    /mr/list-mr                        controllers.MRController.mrList()
GET    /mr/hq                             controllers.MRController.headQuarter()
GET    /dcr-line-item                     controllers.MRController.visitDoctor()
POST   /dcr-line-item/proccess            controllers.MRController.visitDoctorProccess()
GET    /search                            controllers.MRController.search()
GET		/mr/display-appointment/:id			controllers.MRController.scheduleAppointment(id:String)	


# delete later
GET    /userform/patient/                 controllers.PatientController.form()
GET    /userform/patient/h/               controllers.PatientController.enterForm()
GET    /register/                         controllers.PatientController.register()
POST   /register/                         controllers.PatientController.registerProccess()
#GET		/create-appointment					controllers.DoctorController.createAppointment()

#sample data
#GET   /sampledata/day					controllers.SampleDataController.days()



# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file                      controllers.Assets.at(path="/public", file)
